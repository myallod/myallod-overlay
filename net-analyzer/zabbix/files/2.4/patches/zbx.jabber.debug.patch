Index: src/libs/zbxmedia/jabber.c
===================================================================
--- src/libs/zbxmedia/jabber.c.origi	2015-07-05 11:04:15.000000000 +0300
+++ src/libs/zbxmedia/jabber.c		2015-04-22 10:56:00.000000000 +0300
@@ -188,11 +188,11 @@
 {
 	const char	*__function_name = "on_result";
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s()", __module_name, __function_name);
 
 	sess->status = JABBER_READY;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s()", __module_name, __function_name);
 
 	return IKS_FILTER_EAT;
 }
@@ -213,7 +213,7 @@
 	AGENT_RESULT	result;
 	int		ret = SYSINFO_RET_FAIL;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s() server:'%s' port:%d", __module_name, __function_name, server, port);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s() server:'%s' port:%d", __module_name, __function_name, server, port);
 
 	init_result(&result);
 
@@ -225,7 +225,7 @@
 		int		cur_priority, cur_weight, cur_port;
 		const char	*p = result.text;
 
-		zabbix_log(LOG_LEVEL_DEBUG, "response to DNS query: [%s]", result.text);
+		zabbix_log(LOG_LEVEL_WARNING, "response to DNS query: [%s]", result.text);
 
 		/* let us now choose the server with the highest priority and maximum weight */
 
@@ -261,7 +261,7 @@
 		*real_port = port;
 	}
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s() real_server:'%s' real_port:%d",
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s() real_server:'%s' real_port:%d",
 			__module_name, __function_name, real_server, *real_port);
 }
 
@@ -280,7 +280,7 @@
 {
 	const char	*__function_name = "disconnect_jabber";
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s()", __module_name, __function_name);
 
 	if (JABBER_DISCONNECTED != jsess->status)
 		iks_disconnect(jsess->prs);
@@ -303,7 +303,7 @@
 
 	jsess->status = JABBER_DISCONNECTED;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s()", __module_name, __function_name);
 
 	return SUCCEED;
 }
@@ -315,7 +315,7 @@
 	ikspak		*pak = NULL;
 	int		ret = IKS_OK;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s()", __module_name, __function_name);
 
 	switch (type)
 	{
@@ -365,7 +365,7 @@
 			}
 			else if (0 == strcmp("success", iks_name(node)))
 			{
-				zabbix_log(LOG_LEVEL_DEBUG, "%s: authorized", __module_name);
+				zabbix_log(LOG_LEVEL_WARNING, "%s: authorized", __module_name);
 				sess->status = JABBER_AUTHORIZED;
 				iks_send_header(sess->prs, sess->acc->server);
 			}
@@ -391,7 +391,7 @@
 	if (NULL != node)
 		iks_delete(node);
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s()", __module_name, __function_name);
 
 	return ret;
 }
@@ -405,13 +405,11 @@
 	return IKS_FILTER_EAT;
 }
 
-#ifdef DEBUG
 static void	on_log(jabber_session_p sess, const char *data, size_t size, int is_incoming)
 {
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: %s%s: %s",
+	zabbix_log(LOG_LEVEL_WARNING, "%s: %s%s: %s",
 			__module_name, iks_is_secure(sess->prs) ? "Sec" : "", is_incoming ? "RECV" : "SEND", data);
 }
-#endif
 
 /******************************************************************************
  *                                                                            *
@@ -432,7 +430,7 @@
 	char		real_server[MAX_STRING_LEN];
 	int		real_port = 0, iks_error, timeout, ret = FAIL;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s() jabber_id:'%s'", __module_name, __function_name, jabber_id);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s() jabber_id:'%s'", __module_name, __function_name, jabber_id);
 
 	if (NULL == jsess)
 	{
@@ -450,9 +448,7 @@
 		goto lbl_fail;
 	}
 
-#ifdef DEBUG
 	iks_set_log_hook(jsess->prs, (iksLogHook *)on_log);
-#endif
 
 	jsess->acc = iks_id_new(iks_parser_stack(jsess->prs), jabber_id);
 
@@ -533,7 +529,7 @@
 	if (JABBER_READY == jsess->status)
 		ret = SUCCEED;
 lbl_fail:
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s():%s", __module_name, __function_name, zbx_result_string(ret));
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s():%s", __module_name, __function_name, zbx_result_string(ret));
 
 	return ret;
 }
@@ -559,7 +555,7 @@
 
 	assert(error);
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: In %s()", __module_name, __function_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: In %s()", __module_name, __function_name);
 
 	*error = '\0';
 
@@ -569,7 +565,7 @@
 	if (SUCCEED != connect_jabber(username, password, 1, IKS_JABBER_PORT))
 		goto lbl_fail;
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: sending", __module_name);
+	zabbix_log(LOG_LEVEL_WARNING, "%s: sending", __module_name);
 
 	if (NULL != (x = iks_make_msg(IKS_TYPE_NONE, sendto, message)))
 	{
@@ -578,7 +574,7 @@
 
 		if (IKS_OK == (iks_error = iks_send(jsess->prs, x)))
 		{
-			zabbix_log(LOG_LEVEL_DEBUG, "%s: message sent", __module_name);
+			zabbix_log(LOG_LEVEL_WARNING, "%s: message sent", __module_name);
 			ret = SUCCEED;
 		}
 		else
@@ -601,7 +597,7 @@
 	if ('\0' != *error)
 		zabbix_log(LOG_LEVEL_WARNING, "%s: [%s] %s", __module_name, username, error);
 
-	zabbix_log(LOG_LEVEL_DEBUG, "%s: End of %s():%s", __module_name, __function_name, zbx_result_string(ret));
+	zabbix_log(LOG_LEVEL_WARNING, "%s: End of %s():%s", __module_name, __function_name, zbx_result_string(ret));
 
 	return ret;
 }
